-- DROP everything safely first
DROP TABLE IF EXISTS matches, cvs, interviews, preferences, residencies, logs, users CASCADE;
DROP TYPE IF EXISTS user_role, college_year_enum CASCADE;

-- ENUM TYPES
CREATE TYPE user_role AS ENUM ('student', 'admin', 'company');
CREATE TYPE college_year_enum AS ENUM ('_1', '_2', '_3', '_4', '_5');

-- USERS TABLE
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    role user_role NOT NULL,
    first_name VARCHAR(40) NOT NULL,
    last_name VARCHAR(40) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
    course_code VARCHAR(15),
    college_year college_year_enum
);

-- LOGS TABLE
CREATE TABLE logs (
    id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id) ON DELETE SET NULL,
    action VARCHAR(255),
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- RESIDENCIES TABLE
CREATE TABLE residencies (
    id SERIAL PRIMARY KEY,
    job_title VARCHAR(50),
    job_description TEXT,
    job_slots INT,
    interview_quota INT,
    recruitment_description TEXT,
    company_id INT REFERENCES users(id) ON DELETE SET NULL
);

-- PREFERENCES TABLE
CREATE TABLE preferences (
    id SERIAL PRIMARY KEY,
    student_id INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    residency_id INT NOT NULL REFERENCES residencies(id) ON DELETE CASCADE,
    rank_position INT NOT NULL,
    round INT,
    ranking_stage INT
);

-- INTERVIEWS TABLE
CREATE TABLE interviews (
    id SERIAL PRIMARY KEY,
    student_id INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    residency_id INT NOT NULL REFERENCES residencies(id) ON DELETE CASCADE,
    score INT CHECK (score BETWEEN 0 AND 10)
);

-- CVS TABLE
CREATE TABLE cvs (
    id SERIAL PRIMARY KEY,
    student_id INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    residency_id INT NOT NULL REFERENCES residencies(id) ON DELETE CASCADE,
    file_url VARCHAR(500),
    uploaded_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- MATCHES TABLE
CREATE TABLE matches (
    id SERIAL PRIMARY KEY,
    student_id INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    residency_id INT NOT NULL REFERENCES residencies(id) ON DELETE CASCADE,
    round INT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
